import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Modal,
} from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';
import useTranslation from '../hooks/useTranslation';
import I18n from '../locales/i18n';

const LanguageSelector = () => {
  const { t, changeLanguage, currentLanguage } = useTranslation();
  const [modalVisible, setModalVisible] = useState(false);

  const languages = [
    { code: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡©ðŸ‡´' },
    { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
  ];

  const handleLanguageChange = (langCode: string) => {
    changeLanguage(langCode);
    setModalVisible(false);
    // Forzar re-render de la app
    I18n.locale = langCode;
  };

  const currentLang = languages.find(lang => lang.code === currentLanguage);

  return (
    <>
      <TouchableOpacity
        style={styles.button}
        onPress={() => setModalVisible(true)}
      >
        <Text style={styles.flag}>{currentLang?.flag}</Text>
        <Text style={styles.langCode}>{currentLang?.code.toUpperCase()}</Text>
        <Icon name="chevron-down" size={16} color="#666" />
      </TouchableOpacity>

      <Modal
        animationType="slide"
        transparent={true}
        visible={modalVisible}
        onRequestClose={() => setModalVisible(false)}
      >
        <TouchableOpacity 
          style={styles.modalOverlay}
          activeOpacity={1}
          onPress={() => setModalVisible(false)}
        >
          <View style={styles.modalContent}>
            <Text style={styles.modalTitle}>Seleccionar Idioma</Text>
            
            {languages.map((lang) => (
              <TouchableOpacity
                key={lang.code}
                style={[
                  styles.languageOption,
                  currentLanguage === lang.code && styles.selectedOption
                ]}
                onPress={() => handleLanguageChange(lang.code)}
              >
                <Text style={styles.flag}>{lang.flag}</Text>
                <Text style={styles.languageName}>{lang.name}</Text>
                {currentLanguage === lang.code && (
                  <Icon name="checkmark" size={20} color="#4CAF50" />
                )}
              </TouchableOpacity>
            ))}
          </View>
        </TouchableOpacity>
      </Modal>
    </>
  );
};

const styles = StyleSheet.create({
  button: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 20,
    gap: 4,
  },
  flag: {
    fontSize: 20,
  },
  langCode: {
    fontSize: 14,
    fontWeight: '600',
    color: '#333',
  },
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0,0,0,0.5)',
    justifyContent: 'flex-end',
  },
  modalContent: {
    backgroundColor: 'white',
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    padding: 20,
    paddingBottom: 40,
  },
  modalTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  languageOption: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 15,
    borderRadius: 10,
    marginVertical: 5,
    backgroundColor: '#f9f9f9',
  },
  selectedOption: {
    backgroundColor: '#e8f5e9',
  },
  languageName: {
    flex: 1,
    marginLeft: 15,
    fontSize: 16,
  },
});

export default LanguageSelector;